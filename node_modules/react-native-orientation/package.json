{
  "_args": [
    [
      {
        "hosted": {
          "directUrl": "https://raw.githubusercontent.com/yamill/react-native-orientation/master/package.json",
          "gitUrl": "git://github.com/yamill/react-native-orientation.git",
          "httpsUrl": "git+https://github.com/yamill/react-native-orientation.git",
          "shortcut": "github:yamill/react-native-orientation",
          "ssh": "git@github.com:yamill/react-native-orientation.git",
          "sshUrl": "git+ssh://git@github.com/yamill/react-native-orientation.git",
          "type": "github"
        },
        "name": "react-native-orientation",
        "raw": "react-native-orientation@github:yamill/react-native-orientation",
        "rawSpec": "github:yamill/react-native-orientation",
        "scope": null,
        "spec": "github:yamill/react-native-orientation",
        "type": "hosted"
      },
      "/Users/jagger/projects/zqc-app-demo"
    ]
  ],
  "_from": "yamill/react-native-orientation",
  "_id": "react-native-orientation@1.17.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/react-native-orientation",
  "_phantomChildren": {},
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/yamill/react-native-orientation/master/package.json",
      "gitUrl": "git://github.com/yamill/react-native-orientation.git",
      "httpsUrl": "git+https://github.com/yamill/react-native-orientation.git",
      "shortcut": "github:yamill/react-native-orientation",
      "ssh": "git@github.com:yamill/react-native-orientation.git",
      "sshUrl": "git+ssh://git@github.com/yamill/react-native-orientation.git",
      "type": "github"
    },
    "name": "react-native-orientation",
    "raw": "react-native-orientation@github:yamill/react-native-orientation",
    "rawSpec": "github:yamill/react-native-orientation",
    "scope": null,
    "spec": "github:yamill/react-native-orientation",
    "type": "hosted"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git://github.com/yamill/react-native-orientation.git#278291739e2b7c8ab208fdf404e4b139e24b4a3f",
  "_shasum": "17d4008942ceea93f3f95a8e5d2a3e1ead9cf164",
  "_shrinkwrap": null,
  "_spec": "react-native-orientation@github:yamill/react-native-orientation",
  "_where": "/Users/jagger/projects/zqc-app-demo",
  "author": {
    "email": "yamill@gmail.com",
    "name": "Yamill Vallecillo",
    "url": "github.com/yamill"
  },
  "bugs": {
    "url": "https://github.com/yamill/react-native-orientation/issues"
  },
  "dependencies": {},
  "description": "Listen to device orientation changes in react-native and set preferred orientation on screen to screen basis",
  "devDependencies": {},
  "gitHead": "278291739e2b7c8ab208fdf404e4b139e24b4a3f",
  "homepage": "https://github.com/yamill/react-native-orientation#readme",
  "keywords": [
    "react-component",
    "react-native",
    "ios",
    "orientation",
    "android"
  ],
  "license": "ISC",
  "main": "index.js",
  "name": "react-native-orientation",
  "optionalDependencies": {},
  "peerDependencies": {
    "react-native": ">=0.5"
  },
  "readme": "## react-native-orientation\nListen to device orientation changes in react-native and set preferred orientation on screen to screen basis.\n\n### Installation\n\n#### via rnpm\n\nRun `rnpm install react-native-orientation`\n\n> Note: rnpm will install and link the library automatically.\n\n#### via npm\n\nRun `npm install react-native-orientation --save`\n\n### Linking\n\n#### Using rnpm (iOS + Android)\n\n`rnpm link react-native-orientation`\n\n#### Using [CocoaPods](https://cocoapods.org) (iOS Only)\n\n`pod 'react-native-orientation', :path => 'node_modules/react-native-orientation'`\n\nConsult the React Native documentation on how to [install React Native using CocoaPods](https://facebook.github.io/react-native/docs/embedded-app-ios.html#install-react-native-using-cocoapods).\n\n#### Manually\n\n**iOS**\n\n1. Add `node_modules/react-native-orientation/iOS/RCTOrientation.xcodeproj` to your xcode project, usually under the `Libraries` group\n1. Add `libRCTOrientation.a` (from `Products` under `RCTOrientation.xcodeproj`) to build target's `Linked Frameworks and Libraries` list\n\n\n**Android**\n\n1. In `android/setting.gradle`\n\n    ```\n    ...\n    include ':react-native-orientation', ':app'\n    project(':react-native-orientation').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-orientation/android')\n    ```\n\n2. In `android/app/build.gradle`\n\n    ```\n    ...\n    dependencies {\n        ...\n        compile project(':react-native-orientation')\n    }\n    ```\n\n3. Register module (in MainApplication.java)\n\n    ```\n    import com.github.yamill.orientation.OrientationPackage;  // <--- import\n\n    public class MainApplication extends Application implements ReactApplication {\n      ......\n\n      @Override\n      protected List<ReactPackage> getPackages() {\n          return Arrays.<ReactPackage>asList(\n              new MainReactPackage(),\n              new OrientationPackage()      <------- Add this\n          );\n      }\n\n      ......\n\n    }\n    ```\n\n### Configuration\n\n#### iOS\n\nAdd the following to your project's `AppDelegate.m`:\n\n```objc\n#import \"Orientation.h\" // <--- import\n\n@implementation AppDelegate\n\n  // ...\n\n  - (UIInterfaceOrientationMask)application:(UIApplication *)application supportedInterfaceOrientationsForWindow:(UIWindow *)window {\n    return [Orientation getOrientation];\n  }\n\n@end\n```\n\n#### Android\n\nImplement onConfigurationChanged method (in MainActivity.java)\n\n```\n    import android.content.Intent; // <--- import\n    import android.content.res.Configuration; // <--- import\n\n    public class MainActivity extends ReactActivity {\n      ......\n      @Override\n      public void onConfigurationChanged(Configuration newConfig) {\n        super.onConfigurationChanged(newConfig);\n        Intent intent = new Intent(\"onConfigurationChanged\");\n        intent.putExtra(\"newConfig\", newConfig);\n        this.sendBroadcast(intent);\n    }\n\n      ......\n\n    }\n```\n\n## Usage\n\nWhenever you want to use it within React Native code now you can:\n`var Orientation = require('react-native-orientation');`\n\n```javascript\n  _orientationDidChange: function(orientation) {\n    if (orientation == 'LANDSCAPE') {\n      //do something with landscape layout\n    } else {\n      //do something with portrait layout\n    }\n  },\n\n  componentWillMount: function() {\n    //The getOrientation method is async. It happens sometimes that\n    //you need the orientation at the moment the js starts running on device.\n    //getInitialOrientation returns directly because its a constant set at the\n    //beginning of the js code.\n    var initial = Orientation.getInitialOrientation();\n    if (initial === 'PORTRAIT') {\n      //do stuff\n    } else {\n      //do other stuff\n    }\n  },\n\n  componentDidMount: function() {\n    Orientation.lockToPortrait(); //this will lock the view to Portrait\n    //Orientation.lockToLandscape(); //this will lock the view to Landscape\n    //Orientation.unlockAllOrientations(); //this will unlock the view to all Orientations\n\n    Orientation.addOrientationListener(this._orientationDidChange);\n  },\n\n  componentWillUnmount: function() {\n    Orientation.getOrientation((err,orientation)=> {\n      console.log(\"Current Device Orientation: \", orientation);\n    });\n    Orientation.removeOrientationListener(this._orientationDidChange);\n  }\n```\n\n## Events\n\n- `addOrientationListener(function(orientation))`\n\norientation can return either `LANDSCAPE` `PORTRAIT` `UNKNOWN`\nalso `PORTRAITUPSIDEDOWN` is now different from `PORTRAIT`\n\n- `removeOrientationListener(function(orientation))`\n\n- `addSpecificOrientationListener(function(specificOrientation))`\n\nspecificOrientation can return either `LANDSCAPE-LEFT` `LANDSCAPE-RIGHT` `PORTRAIT` `UNKNOWN` `PORTRAITUPSIDEDOWN`\n\n- `removeSpecificOrientationListener(function(specificOrientation))`\n\n## Functions\n\n- `lockToPortrait()`\n- `lockToLandscape()`\n- `lockToLandscapeLeft()`\n- `lockToLandscapeRight()`\n- `unlockAllOrientations()`\n- `getOrientation(function(err, orientation)`\n\norientation can return either `LANDSCAPE` `PORTRAIT` `UNKNOWN` `PORTRAITUPSIDEDOWN`\n\n- `getSpecificOrientation(function(err, specificOrientation)`\n\nspecificOrientation can return either `LANDSCAPE-LEFT` `LANDSCAPE-RIGHT` `PORTRAIT` `UNKNOWN` `PORTRAITUPSIDEDOWN`\n\n## TODOS\n\n- [x] Add some way to allow setting a preferred orientation on a screen by screen basis.\n- [x] Make API Cleaner to Orientation Locking\n- [x] Android Support\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/yamill/react-native-orientation.git"
  },
  "rnpm": {
    "android": {
      "packageInstance": "new OrientationPackage()"
    },
    "ios": {
      "project": "iOS/RCTOrientation.xcodeproj"
    }
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "1.17.0"
}
